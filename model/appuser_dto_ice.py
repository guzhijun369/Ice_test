# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.2
#
# <auto-generated>
#
# Generated from file `appuser_dto.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
from model import common_ice

# Included module com
_M_com = Ice.openModule('com')

# Included module com.jimi
_M_com.jimi = Ice.openModule('com.jimi')

# Included module com.jimi.api
_M_com.jimi.api = Ice.openModule('com.jimi.api')

# Start of module com
__name__ = 'com'

# Start of module com.jimi
__name__ = 'com.jimi'

# Start of module com.jimi.api
__name__ = 'com.jimi.api'

# Start of module com.jimi.api.user
_M_com.jimi.api.user = Ice.openModule('com.jimi.api.user')
__name__ = 'com.jimi.api.user'

# Start of module com.jimi.api.user.app
_M_com.jimi.api.user.app = Ice.openModule('com.jimi.api.user.app')
__name__ = 'com.jimi.api.user.app'

# Start of module com.jimi.api.user.app.dto
_M_com.jimi.api.user.app.dto = Ice.openModule('com.jimi.api.user.app.dto')
__name__ = 'com.jimi.api.user.app.dto'

if 'AppUserOutputDTO' not in _M_com.jimi.api.user.app.dto.__dict__:
    _M_com.jimi.api.user.app.dto.AppUserOutputDTO = Ice.createTempClass()
    class AppUserOutputDTO(_M_com.jimi.api.BaseOutputDTO):
        """
        用户数据输出参数
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        id -- 用户ID
        phone -- 用户手机号
        nickName -- 用户昵称
        enableFlag -- 用户账号是否启用
        gmtCreate -- 创建日期
        gmtModified -- 更新日期
        """
        def __init__(self, id='', phone='', nickName='', enableFlag=False, gmtCreate=0, gmtModified=0):
            _M_com.jimi.api.BaseOutputDTO.__init__(self)
            self.id = id
            self.phone = phone
            self.nickName = nickName
            self.enableFlag = enableFlag
            self.gmtCreate = gmtCreate
            self.gmtModified = gmtModified

        def ice_id(self):
            return '::com::jimi::api::user::app::dto::AppUserOutputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::app::dto::AppUserOutputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.app.dto._t_AppUserOutputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.app.dto._t_AppUserOutputDTO = IcePy.defineValue('::com::jimi::api::user::app::dto::AppUserOutputDTO', AppUserOutputDTO, -1, (), False, False, _M_com.jimi.api._t_BaseOutputDTO, (
        ('id', (), IcePy._t_string, False, 0),
        ('phone', (), IcePy._t_string, False, 0),
        ('nickName', (), IcePy._t_string, False, 0),
        ('enableFlag', (), IcePy._t_bool, False, 0),
        ('gmtCreate', (), IcePy._t_long, False, 0),
        ('gmtModified', (), IcePy._t_long, False, 0)
    ))
    AppUserOutputDTO._ice_type = _M_com.jimi.api.user.app.dto._t_AppUserOutputDTO

    _M_com.jimi.api.user.app.dto.AppUserOutputDTO = AppUserOutputDTO
    del AppUserOutputDTO

if '_t_AppUserListOutputDTO' not in _M_com.jimi.api.user.app.dto.__dict__:
    _M_com.jimi.api.user.app.dto._t_AppUserListOutputDTO = IcePy.defineSequence('::com::jimi::api::user::app::dto::AppUserListOutputDTO', (), _M_com.jimi.api.user.app.dto._t_AppUserOutputDTO)

if 'AddAppUserInputDTO' not in _M_com.jimi.api.user.app.dto.__dict__:
    _M_com.jimi.api.user.app.dto.AddAppUserInputDTO = Ice.createTempClass()
    class AddAppUserInputDTO(_M_com.jimi.api.BaseInputDTO):
        """
        用户输入数据参数
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        phone -- 用户手机号
        nickName -- 用户昵称
        password -- 用户密码
        """
        def __init__(self, operator='', platform='', phone='', nickName='', password=''):
            _M_com.jimi.api.BaseInputDTO.__init__(self, operator, platform)
            self.phone = phone
            self.nickName = nickName
            self.password = password

        def ice_id(self):
            return '::com::jimi::api::user::app::dto::AddAppUserInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::app::dto::AddAppUserInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.app.dto._t_AddAppUserInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.app.dto._t_AddAppUserInputDTO = IcePy.defineValue('::com::jimi::api::user::app::dto::AddAppUserInputDTO', AddAppUserInputDTO, -1, (), False, False, _M_com.jimi.api._t_BaseInputDTO, (
        ('phone', (), IcePy._t_string, False, 0),
        ('nickName', (), IcePy._t_string, False, 0),
        ('password', (), IcePy._t_string, False, 0)
    ))
    AddAppUserInputDTO._ice_type = _M_com.jimi.api.user.app.dto._t_AddAppUserInputDTO

    _M_com.jimi.api.user.app.dto.AddAppUserInputDTO = AddAppUserInputDTO
    del AddAppUserInputDTO

if 'UpdateAppUserInputDTO' not in _M_com.jimi.api.user.app.dto.__dict__:
    _M_com.jimi.api.user.app.dto.UpdateAppUserInputDTO = Ice.createTempClass()
    class UpdateAppUserInputDTO(_M_com.jimi.api.BaseInputDTO):
        """
        更新用户数据输入参数
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        id -- 用户ID
        nickName -- 用户昵称
        """
        def __init__(self, operator='', platform='', id='', nickName=''):
            _M_com.jimi.api.BaseInputDTO.__init__(self, operator, platform)
            self.id = id
            self.nickName = nickName

        def ice_id(self):
            return '::com::jimi::api::user::app::dto::UpdateAppUserInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::app::dto::UpdateAppUserInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.app.dto._t_UpdateAppUserInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.app.dto._t_UpdateAppUserInputDTO = IcePy.defineValue('::com::jimi::api::user::app::dto::UpdateAppUserInputDTO', UpdateAppUserInputDTO, -1, (), False, False, _M_com.jimi.api._t_BaseInputDTO, (
        ('id', (), IcePy._t_string, False, 0),
        ('nickName', (), IcePy._t_string, False, 0)
    ))
    UpdateAppUserInputDTO._ice_type = _M_com.jimi.api.user.app.dto._t_UpdateAppUserInputDTO

    _M_com.jimi.api.user.app.dto.UpdateAppUserInputDTO = UpdateAppUserInputDTO
    del UpdateAppUserInputDTO

if 'FindListInputDTO' not in _M_com.jimi.api.user.app.dto.__dict__:
    _M_com.jimi.api.user.app.dto.FindListInputDTO = Ice.createTempClass()
    class FindListInputDTO(_M_com.jimi.api.BaseInputDTO):
        """
        查询用户数据输入参数
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        id -- 用户ID
        phone -- 用户手机号
        """
        def __init__(self, operator='', platform='', id='', phone=''):
            _M_com.jimi.api.BaseInputDTO.__init__(self, operator, platform)
            self.id = id
            self.phone = phone

        def ice_id(self):
            return '::com::jimi::api::user::app::dto::FindListInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::app::dto::FindListInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.app.dto._t_FindListInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.app.dto._t_FindListInputDTO = IcePy.defineValue('::com::jimi::api::user::app::dto::FindListInputDTO', FindListInputDTO, -1, (), False, False, _M_com.jimi.api._t_BaseInputDTO, (
        ('id', (), IcePy._t_string, False, 0),
        ('phone', (), IcePy._t_string, False, 0)
    ))
    FindListInputDTO._ice_type = _M_com.jimi.api.user.app.dto._t_FindListInputDTO

    _M_com.jimi.api.user.app.dto.FindListInputDTO = FindListInputDTO
    del FindListInputDTO

# End of module com.jimi.api.user.app.dto

__name__ = 'com.jimi.api.user.app'

# End of module com.jimi.api.user.app

__name__ = 'com.jimi.api.user'

# End of module com.jimi.api.user

__name__ = 'com.jimi.api'

# End of module com.jimi.api

__name__ = 'com.jimi'

# End of module com.jimi

__name__ = 'com'

# End of module com
