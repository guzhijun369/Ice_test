# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.2
#
# <auto-generated>
#
# Generated from file `system_member_dto.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
from model import common_ice

# Included module com
_M_com = Ice.openModule('com')

# Included module com.jimi
_M_com.jimi = Ice.openModule('com.jimi')

# Included module com.jimi.api
_M_com.jimi.api = Ice.openModule('com.jimi.api')

# Start of module com
__name__ = 'com'

# Start of module com.jimi
__name__ = 'com.jimi'

# Start of module com.jimi.api
__name__ = 'com.jimi.api'

# Start of module com.jimi.api.user
_M_com.jimi.api.user = Ice.openModule('com.jimi.api.user')
__name__ = 'com.jimi.api.user'

# Start of module com.jimi.api.user.system
_M_com.jimi.api.user.system = Ice.openModule('com.jimi.api.user.system')
__name__ = 'com.jimi.api.user.system'

# Start of module com.jimi.api.user.system.constant
_M_com.jimi.api.user.system.constant = Ice.openModule('com.jimi.api.user.system.constant')
__name__ = 'com.jimi.api.user.system.constant'

if 'PermissionType' not in _M_com.jimi.api.user.system.constant.__dict__:
    _M_com.jimi.api.user.system.constant.PermissionType = Ice.createTempClass()
    class PermissionType(Ice.EnumBase):
        """
        权限类型
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Enumerators:
        MENU -- 菜单
        BUTTON -- 按钮
        """

        def __init__(self, _n, _v):
            Ice.EnumBase.__init__(self, _n, _v)

        def valueOf(self, _n):
            if _n in self._enumerators:
                return self._enumerators[_n]
            return None
        valueOf = classmethod(valueOf)

    PermissionType.MENU = PermissionType("MENU", 0)
    PermissionType.BUTTON = PermissionType("BUTTON", 1)
    PermissionType._enumerators = { 0:PermissionType.MENU, 1:PermissionType.BUTTON }

    _M_com.jimi.api.user.system.constant._t_PermissionType = IcePy.defineEnum('::com::jimi::api::user::system::constant::PermissionType', PermissionType, (), PermissionType._enumerators)

    _M_com.jimi.api.user.system.constant.PermissionType = PermissionType
    del PermissionType

# End of module com.jimi.api.user.system.constant

__name__ = 'com.jimi.api.user.system'

# Start of module com.jimi.api.user.system.dto
_M_com.jimi.api.user.system.dto = Ice.openModule('com.jimi.api.user.system.dto')
__name__ = 'com.jimi.api.user.system.dto'

if '_t_GroupMapOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto._t_GroupMapOutputDTO = IcePy.defineDictionary('::com::jimi::api::user::system::dto::GroupMapOutputDTO', (), IcePy._t_string, IcePy._t_string)

if '_t_RoleMapOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto._t_RoleMapOutputDTO = IcePy.defineDictionary('::com::jimi::api::user::system::dto::RoleMapOutputDTO', (), IcePy._t_string, IcePy._t_string)

if '_t_PermissionMapOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto._t_PermissionMapOutputDTO = IcePy.defineDictionary('::com::jimi::api::user::system::dto::PermissionMapOutputDTO', (), IcePy._t_string, IcePy._t_string)

if 'MemberOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.MemberOutputDTO = Ice.createTempClass()
    class MemberOutputDTO(Ice.Value):
        """
        成员输出数据
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        id -- 成员ID
        email -- 成员邮箱
        describe -- 成员描述
        groups -- 成员分组
        """
        def __init__(self, id='', email='', describe='', groups=None):
            self.id = id
            self.email = email
            self.describe = describe
            self.groups = groups

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::MemberOutputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::MemberOutputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_MemberOutputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_MemberOutputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::MemberOutputDTO', MemberOutputDTO, -1, (), False, False, None, (
        ('id', (), IcePy._t_string, False, 0),
        ('email', (), IcePy._t_string, False, 0),
        ('describe', (), IcePy._t_string, False, 0),
        ('groups', (), _M_com.jimi.api.user.system.dto._t_GroupMapOutputDTO, False, 0)
    ))
    MemberOutputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_MemberOutputDTO

    _M_com.jimi.api.user.system.dto.MemberOutputDTO = MemberOutputDTO
    del MemberOutputDTO

if 'SystemGroupOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.SystemGroupOutputDTO = Ice.createTempClass()
    class SystemGroupOutputDTO(Ice.Value):
        """
        系统群组输出数据
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        id -- 系统群组ID
        name -- 系统群组名称
        describe -- 系统群组描述
        roles -- 系统群组角色列表
        """
        def __init__(self, id='', name='', describe='', roles=None):
            self.id = id
            self.name = name
            self.describe = describe
            self.roles = roles

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::SystemGroupOutputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::SystemGroupOutputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_SystemGroupOutputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_SystemGroupOutputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::SystemGroupOutputDTO', SystemGroupOutputDTO, -1, (), False, False, None, (
        ('id', (), IcePy._t_string, False, 0),
        ('name', (), IcePy._t_string, False, 0),
        ('describe', (), IcePy._t_string, False, 0),
        ('roles', (), _M_com.jimi.api.user.system.dto._t_RoleMapOutputDTO, False, 0)
    ))
    SystemGroupOutputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_SystemGroupOutputDTO

    _M_com.jimi.api.user.system.dto.SystemGroupOutputDTO = SystemGroupOutputDTO
    del SystemGroupOutputDTO

if 'SystemRoleOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.SystemRoleOutputDTO = Ice.createTempClass()
    class SystemRoleOutputDTO(Ice.Value):
        """
        系统角色输出数据
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        id -- 系统角色ID
        name -- 系统角色名称
        describe -- 系统角色描述
        permissions -- 系统角色权限列表
        """
        def __init__(self, id='', name='', describe='', permissions=None):
            self.id = id
            self.name = name
            self.describe = describe
            self.permissions = permissions

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::SystemRoleOutputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::SystemRoleOutputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_SystemRoleOutputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_SystemRoleOutputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::SystemRoleOutputDTO', SystemRoleOutputDTO, -1, (), False, False, None, (
        ('id', (), IcePy._t_string, False, 0),
        ('name', (), IcePy._t_string, False, 0),
        ('describe', (), IcePy._t_string, False, 0),
        ('permissions', (), _M_com.jimi.api.user.system.dto._t_PermissionMapOutputDTO, False, 0)
    ))
    SystemRoleOutputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_SystemRoleOutputDTO

    _M_com.jimi.api.user.system.dto.SystemRoleOutputDTO = SystemRoleOutputDTO
    del SystemRoleOutputDTO

if 'SystemPermissionOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.SystemPermissionOutputDTO = Ice.createTempClass()
    class SystemPermissionOutputDTO(Ice.Value):
        """
        系统权限输出数据
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        id -- 系统权限ID
        name -- 系统权限名称
        code -- 系统权限code
        type -- 系统权限类型
        url -- 系统权限链接
        platform -- 系统权限所属平台
        """
        def __init__(self, id='', name='', code='', type=_M_com.jimi.api.user.system.constant.PermissionType.MENU, url='', platform=''):
            self.id = id
            self.name = name
            self.code = code
            self.type = type
            self.url = url
            self.platform = platform

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::SystemPermissionOutputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::SystemPermissionOutputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_SystemPermissionOutputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_SystemPermissionOutputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::SystemPermissionOutputDTO', SystemPermissionOutputDTO, -1, (), False, False, None, (
        ('id', (), IcePy._t_string, False, 0),
        ('name', (), IcePy._t_string, False, 0),
        ('code', (), IcePy._t_string, False, 0),
        ('type', (), _M_com.jimi.api.user.system.constant._t_PermissionType, False, 0),
        ('url', (), IcePy._t_string, False, 0),
        ('platform', (), IcePy._t_string, False, 0)
    ))
    SystemPermissionOutputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_SystemPermissionOutputDTO

    _M_com.jimi.api.user.system.dto.SystemPermissionOutputDTO = SystemPermissionOutputDTO
    del SystemPermissionOutputDTO

if '_t_MemberListOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto._t_MemberListOutputDTO = IcePy.defineSequence('::com::jimi::api::user::system::dto::MemberListOutputDTO', (), _M_com.jimi.api.user.system.dto._t_MemberOutputDTO)

if '_t_GroupListOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto._t_GroupListOutputDTO = IcePy.defineSequence('::com::jimi::api::user::system::dto::GroupListOutputDTO', (), _M_com.jimi.api.user.system.dto._t_SystemGroupOutputDTO)

if '_t_SystemRoleListOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto._t_SystemRoleListOutputDTO = IcePy.defineSequence('::com::jimi::api::user::system::dto::SystemRoleListOutputDTO', (), _M_com.jimi.api.user.system.dto._t_SystemRoleOutputDTO)

if '_t_SystemPermissionListOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto._t_SystemPermissionListOutputDTO = IcePy.defineSequence('::com::jimi::api::user::system::dto::SystemPermissionListOutputDTO', (), _M_com.jimi.api.user.system.dto._t_SystemRoleOutputDTO)

if '_t_GroupIdArr' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto._t_GroupIdArr = IcePy.defineSequence('::com::jimi::api::user::system::dto::GroupIdArr', (), IcePy._t_string)

if '_t_RoleIdArr' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto._t_RoleIdArr = IcePy.defineSequence('::com::jimi::api::user::system::dto::RoleIdArr', (), IcePy._t_string)

if '_t_PermissionIdArr' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto._t_PermissionIdArr = IcePy.defineSequence('::com::jimi::api::user::system::dto::PermissionIdArr', (), IcePy._t_string)

if 'AddMemberInputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.AddMemberInputDTO = Ice.createTempClass()
    class AddMemberInputDTO(Ice.Value):
        """
        添加成员输入数据
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        name -- 成员名称
        email -- 成员邮箱
        describe -- 成员描述
        password -- 成员密码
        operator -- 成员操作者
        """
        def __init__(self, name='', email='', describe='', password='', operator=0):
            self.name = name
            self.email = email
            self.describe = describe
            self.password = password
            self.operator = operator

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::AddMemberInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::AddMemberInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_AddMemberInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_AddMemberInputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::AddMemberInputDTO', AddMemberInputDTO, -1, (), False, False, None, (
        ('name', (), IcePy._t_string, False, 0),
        ('email', (), IcePy._t_string, False, 0),
        ('describe', (), IcePy._t_string, False, 0),
        ('password', (), IcePy._t_string, False, 0),
        ('operator', (), IcePy._t_long, False, 0)
    ))
    AddMemberInputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_AddMemberInputDTO

    _M_com.jimi.api.user.system.dto.AddMemberInputDTO = AddMemberInputDTO
    del AddMemberInputDTO

if 'UpdateMemberInputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.UpdateMemberInputDTO = Ice.createTempClass()
    class UpdateMemberInputDTO(Ice.Value):
        """
        更新成员输入数据
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        id -- 成员ID
        name -- 成员名称
        email -- 成员邮箱
        describe -- 成员描述
        operator -- 成员操作者
        """
        def __init__(self, id='', name='', email='', describe='', operator=0):
            self.id = id
            self.name = name
            self.email = email
            self.describe = describe
            self.operator = operator

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::UpdateMemberInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::UpdateMemberInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_UpdateMemberInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_UpdateMemberInputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::UpdateMemberInputDTO', UpdateMemberInputDTO, -1, (), False, False, None, (
        ('id', (), IcePy._t_string, False, 0),
        ('name', (), IcePy._t_string, False, 0),
        ('email', (), IcePy._t_string, False, 0),
        ('describe', (), IcePy._t_string, False, 0),
        ('operator', (), IcePy._t_long, False, 0)
    ))
    UpdateMemberInputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_UpdateMemberInputDTO

    _M_com.jimi.api.user.system.dto.UpdateMemberInputDTO = UpdateMemberInputDTO
    del UpdateMemberInputDTO

if 'AddSystemGroupInputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.AddSystemGroupInputDTO = Ice.createTempClass()
    class AddSystemGroupInputDTO(Ice.Value):
        """
        添加系统群组输入数据
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        name -- 系统群组名称
        describe -- 系统群组描述
        operator -- 系统群组操作者
        """
        def __init__(self, name='', describe='', operator=0):
            self.name = name
            self.describe = describe
            self.operator = operator

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::AddSystemGroupInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::AddSystemGroupInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_AddSystemGroupInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_AddSystemGroupInputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::AddSystemGroupInputDTO', AddSystemGroupInputDTO, -1, (), False, False, None, (
        ('name', (), IcePy._t_string, False, 0),
        ('describe', (), IcePy._t_string, False, 0),
        ('operator', (), IcePy._t_long, False, 0)
    ))
    AddSystemGroupInputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_AddSystemGroupInputDTO

    _M_com.jimi.api.user.system.dto.AddSystemGroupInputDTO = AddSystemGroupInputDTO
    del AddSystemGroupInputDTO

if 'UpdateSystemGroupInputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.UpdateSystemGroupInputDTO = Ice.createTempClass()
    class UpdateSystemGroupInputDTO(Ice.Value):
        """
        更新系统群组输入数据
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        id -- 系统群组ID
        name -- 系统群组名称
        describe -- 系统群组描述
        operator -- 系统群组操作者
        """
        def __init__(self, id='', name='', describe='', operator=0):
            self.id = id
            self.name = name
            self.describe = describe
            self.operator = operator

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::UpdateSystemGroupInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::UpdateSystemGroupInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_UpdateSystemGroupInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_UpdateSystemGroupInputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::UpdateSystemGroupInputDTO', UpdateSystemGroupInputDTO, -1, (), False, False, None, (
        ('id', (), IcePy._t_string, False, 0),
        ('name', (), IcePy._t_string, False, 0),
        ('describe', (), IcePy._t_string, False, 0),
        ('operator', (), IcePy._t_long, False, 0)
    ))
    UpdateSystemGroupInputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_UpdateSystemGroupInputDTO

    _M_com.jimi.api.user.system.dto.UpdateSystemGroupInputDTO = UpdateSystemGroupInputDTO
    del UpdateSystemGroupInputDTO

if 'AddSystemRoleInputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.AddSystemRoleInputDTO = Ice.createTempClass()
    class AddSystemRoleInputDTO(Ice.Value):
        """
        添加系统角色输入数据
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        name -- 系统角色名称
        describe -- 系统角色描述
        operator -- 系统角色操作者
        """
        def __init__(self, name='', describe='', operator=0):
            self.name = name
            self.describe = describe
            self.operator = operator

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::AddSystemRoleInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::AddSystemRoleInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_AddSystemRoleInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_AddSystemRoleInputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::AddSystemRoleInputDTO', AddSystemRoleInputDTO, -1, (), False, False, None, (
        ('name', (), IcePy._t_string, False, 0),
        ('describe', (), IcePy._t_string, False, 0),
        ('operator', (), IcePy._t_long, False, 0)
    ))
    AddSystemRoleInputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_AddSystemRoleInputDTO

    _M_com.jimi.api.user.system.dto.AddSystemRoleInputDTO = AddSystemRoleInputDTO
    del AddSystemRoleInputDTO

if 'UpdateSystemRoleInputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.UpdateSystemRoleInputDTO = Ice.createTempClass()
    class UpdateSystemRoleInputDTO(Ice.Value):
        """
        更新系统角色输入数据
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        id -- 系统角色ID
        name -- 系统角色名称
        describe -- 系统角色描述
        operator -- 系统角色操作者
        """
        def __init__(self, id='', name='', describe='', operator=0):
            self.id = id
            self.name = name
            self.describe = describe
            self.operator = operator

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::UpdateSystemRoleInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::UpdateSystemRoleInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_UpdateSystemRoleInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_UpdateSystemRoleInputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::UpdateSystemRoleInputDTO', UpdateSystemRoleInputDTO, -1, (), False, False, None, (
        ('id', (), IcePy._t_string, False, 0),
        ('name', (), IcePy._t_string, False, 0),
        ('describe', (), IcePy._t_string, False, 0),
        ('operator', (), IcePy._t_long, False, 0)
    ))
    UpdateSystemRoleInputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_UpdateSystemRoleInputDTO

    _M_com.jimi.api.user.system.dto.UpdateSystemRoleInputDTO = UpdateSystemRoleInputDTO
    del UpdateSystemRoleInputDTO

if 'AddSystemPermissionInputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.AddSystemPermissionInputDTO = Ice.createTempClass()
    class AddSystemPermissionInputDTO(Ice.Value):
        """
        添加系统权限输入数据
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        name -- 系统权限名称
        type -- 系统权限类型
        url -- 系统权限链接
        code -- 系统权限编码
        platform -- 系统权限所属平台
        describe -- 系统权限描述
        operator -- 系统权限操作者
        """
        def __init__(self, name='', type=_M_com.jimi.api.user.system.constant.PermissionType.MENU, url='', code='', platform='', describe='', operator=0):
            self.name = name
            self.type = type
            self.url = url
            self.code = code
            self.platform = platform
            self.describe = describe
            self.operator = operator

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::AddSystemPermissionInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::AddSystemPermissionInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_AddSystemPermissionInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_AddSystemPermissionInputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::AddSystemPermissionInputDTO', AddSystemPermissionInputDTO, -1, (), False, False, None, (
        ('name', (), IcePy._t_string, False, 0),
        ('type', (), _M_com.jimi.api.user.system.constant._t_PermissionType, False, 0),
        ('url', (), IcePy._t_string, False, 0),
        ('code', (), IcePy._t_string, False, 0),
        ('platform', (), IcePy._t_string, False, 0),
        ('describe', (), IcePy._t_string, False, 0),
        ('operator', (), IcePy._t_long, False, 0)
    ))
    AddSystemPermissionInputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_AddSystemPermissionInputDTO

    _M_com.jimi.api.user.system.dto.AddSystemPermissionInputDTO = AddSystemPermissionInputDTO
    del AddSystemPermissionInputDTO

if 'UpdateSystemPermissionInputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.UpdateSystemPermissionInputDTO = Ice.createTempClass()
    class UpdateSystemPermissionInputDTO(Ice.Value):
        """
        更新系统权限输入数据
        @date 2019年8月23日 上午10:05:28
        @author wangke
        @version 1.0
        Members:
        id -- 系统权限ID
        name -- 系统权限名称
        type -- 系统权限类型
        url -- 系统权限链接
        code -- 系统权限编码
        platform -- 系统权限所属平台
        describe -- 系统权限描述
        operator -- 系统权限操作者
        """
        def __init__(self, id='', name='', type=_M_com.jimi.api.user.system.constant.PermissionType.MENU, url='', code='', platform='', describe='', operator=0):
            self.id = id
            self.name = name
            self.type = type
            self.url = url
            self.code = code
            self.platform = platform
            self.describe = describe
            self.operator = operator

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::UpdateSystemPermissionInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::UpdateSystemPermissionInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_UpdateSystemPermissionInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_UpdateSystemPermissionInputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::UpdateSystemPermissionInputDTO', UpdateSystemPermissionInputDTO, -1, (), False, False, None, (
        ('id', (), IcePy._t_string, False, 0),
        ('name', (), IcePy._t_string, False, 0),
        ('type', (), _M_com.jimi.api.user.system.constant._t_PermissionType, False, 0),
        ('url', (), IcePy._t_string, False, 0),
        ('code', (), IcePy._t_string, False, 0),
        ('platform', (), IcePy._t_string, False, 0),
        ('describe', (), IcePy._t_string, False, 0),
        ('operator', (), IcePy._t_long, False, 0)
    ))
    UpdateSystemPermissionInputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_UpdateSystemPermissionInputDTO

    _M_com.jimi.api.user.system.dto.UpdateSystemPermissionInputDTO = UpdateSystemPermissionInputDTO
    del UpdateSystemPermissionInputDTO

# End of module com.jimi.api.user.system.dto

__name__ = 'com.jimi.api.user.system'

# End of module com.jimi.api.user.system

__name__ = 'com.jimi.api.user'

# End of module com.jimi.api.user

__name__ = 'com.jimi.api'

# End of module com.jimi.api

__name__ = 'com.jimi'

# End of module com.jimi

__name__ = 'com'

# End of module com
