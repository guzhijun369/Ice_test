# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.2
#
# <auto-generated>
#
# Generated from file `organiz_common.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.jimi
_M_com.jimi = Ice.openModule('com.jimi')
__name__ = 'com.jimi'

# Start of module com.jimi.platform
_M_com.jimi.platform = Ice.openModule('com.jimi.platform')
__name__ = 'com.jimi.platform'

# Start of module com.jimi.platform.user
_M_com.jimi.platform.user = Ice.openModule('com.jimi.platform.user')
__name__ = 'com.jimi.platform.user'

# Start of module com.jimi.platform.user.generated
_M_com.jimi.platform.user.generated = Ice.openModule('com.jimi.platform.user.generated')
__name__ = 'com.jimi.platform.user.generated'

if 'AccountOutput' not in _M_com.jimi.platform.user.generated.__dict__:
    _M_com.jimi.platform.user.generated.AccountOutput = Ice.createTempClass()
    class AccountOutput(object):
        """
        账号基本信息
        @date 2019年8月21日 上午11:27:37
        @author yaojianping
        @version 1.0
        Members:
        uid -- 账号id
        userName -- 用户名(可用于登录)
        nickName -- 昵称
        phone -- 手机号(可用于登录)
        email -- 邮箱(可用于登录)
        """
        def __init__(self, uid=0, userName='', nickName='', phone='', email=''):
            self.uid = uid
            self.userName = userName
            self.nickName = nickName
            self.phone = phone
            self.email = email

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.uid)
            _h = 5 * _h + Ice.getHash(self.userName)
            _h = 5 * _h + Ice.getHash(self.nickName)
            _h = 5 * _h + Ice.getHash(self.phone)
            _h = 5 * _h + Ice.getHash(self.email)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.platform.user.generated.AccountOutput):
                return NotImplemented
            else:
                if self.uid is None or other.uid is None:
                    if self.uid != other.uid:
                        return (-1 if self.uid is None else 1)
                else:
                    if self.uid < other.uid:
                        return -1
                    elif self.uid > other.uid:
                        return 1
                if self.userName is None or other.userName is None:
                    if self.userName != other.userName:
                        return (-1 if self.userName is None else 1)
                else:
                    if self.userName < other.userName:
                        return -1
                    elif self.userName > other.userName:
                        return 1
                if self.nickName is None or other.nickName is None:
                    if self.nickName != other.nickName:
                        return (-1 if self.nickName is None else 1)
                else:
                    if self.nickName < other.nickName:
                        return -1
                    elif self.nickName > other.nickName:
                        return 1
                if self.phone is None or other.phone is None:
                    if self.phone != other.phone:
                        return (-1 if self.phone is None else 1)
                else:
                    if self.phone < other.phone:
                        return -1
                    elif self.phone > other.phone:
                        return 1
                if self.email is None or other.email is None:
                    if self.email != other.email:
                        return (-1 if self.email is None else 1)
                else:
                    if self.email < other.email:
                        return -1
                    elif self.email > other.email:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.platform.user.generated._t_AccountOutput)

        __repr__ = __str__

    _M_com.jimi.platform.user.generated._t_AccountOutput = IcePy.defineStruct('::com::jimi::platform::user::generated::AccountOutput', AccountOutput, (), (
        ('uid', (), IcePy._t_long),
        ('userName', (), IcePy._t_string),
        ('nickName', (), IcePy._t_string),
        ('phone', (), IcePy._t_string),
        ('email', (), IcePy._t_string)
    ))

    _M_com.jimi.platform.user.generated.AccountOutput = AccountOutput
    del AccountOutput

if 'AddAccountInput' not in _M_com.jimi.platform.user.generated.__dict__:
    _M_com.jimi.platform.user.generated.AddAccountInput = Ice.createTempClass()
    class AddAccountInput(object):
        """
        添加账号输入
        @date 2019年8月21日 上午11:27:37
        @author yaojianping
        @version 1.0
        Members:
        oid -- 机构id
        userName -- 用户名(可用于登录)
        password -- 密码
        nickName -- 昵称
        phone -- 手机号(可用于登录)
        email -- 邮箱(可用于登录)
        """
        def __init__(self, oid=0, userName='', password='', nickName='', phone='', email=''):
            self.oid = oid
            self.userName = userName
            self.password = password
            self.nickName = nickName
            self.phone = phone
            self.email = email

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.oid)
            _h = 5 * _h + Ice.getHash(self.userName)
            _h = 5 * _h + Ice.getHash(self.password)
            _h = 5 * _h + Ice.getHash(self.nickName)
            _h = 5 * _h + Ice.getHash(self.phone)
            _h = 5 * _h + Ice.getHash(self.email)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.platform.user.generated.AddAccountInput):
                return NotImplemented
            else:
                if self.oid is None or other.oid is None:
                    if self.oid != other.oid:
                        return (-1 if self.oid is None else 1)
                else:
                    if self.oid < other.oid:
                        return -1
                    elif self.oid > other.oid:
                        return 1
                if self.userName is None or other.userName is None:
                    if self.userName != other.userName:
                        return (-1 if self.userName is None else 1)
                else:
                    if self.userName < other.userName:
                        return -1
                    elif self.userName > other.userName:
                        return 1
                if self.password is None or other.password is None:
                    if self.password != other.password:
                        return (-1 if self.password is None else 1)
                else:
                    if self.password < other.password:
                        return -1
                    elif self.password > other.password:
                        return 1
                if self.nickName is None or other.nickName is None:
                    if self.nickName != other.nickName:
                        return (-1 if self.nickName is None else 1)
                else:
                    if self.nickName < other.nickName:
                        return -1
                    elif self.nickName > other.nickName:
                        return 1
                if self.phone is None or other.phone is None:
                    if self.phone != other.phone:
                        return (-1 if self.phone is None else 1)
                else:
                    if self.phone < other.phone:
                        return -1
                    elif self.phone > other.phone:
                        return 1
                if self.email is None or other.email is None:
                    if self.email != other.email:
                        return (-1 if self.email is None else 1)
                else:
                    if self.email < other.email:
                        return -1
                    elif self.email > other.email:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.platform.user.generated._t_AddAccountInput)

        __repr__ = __str__

    _M_com.jimi.platform.user.generated._t_AddAccountInput = IcePy.defineStruct('::com::jimi::platform::user::generated::AddAccountInput', AddAccountInput, (), (
        ('oid', (), IcePy._t_long),
        ('userName', (), IcePy._t_string),
        ('password', (), IcePy._t_string),
        ('nickName', (), IcePy._t_string),
        ('phone', (), IcePy._t_string),
        ('email', (), IcePy._t_string)
    ))

    _M_com.jimi.platform.user.generated.AddAccountInput = AddAccountInput
    del AddAccountInput

if 'AddOrganizationInput' not in _M_com.jimi.platform.user.generated.__dict__:
    _M_com.jimi.platform.user.generated.AddOrganizationInput = Ice.createTempClass()
    class AddOrganizationInput(object):
        """
        添加机构输入
        @date 2019年8月21日 上午11:27:16
        @author yaojianping
        @version 1.0
        Members:
        parent -- 父机构oid
        code -- 机构类型code
        name -- 机构/公司名称
        email -- 邮箱
        contact -- 联系人
        phone -- 手机号
        province -- 省
        city -- 市
        region -- 区
        details -- 详细地址
        """
        def __init__(self, parent=0, code='', name='', email='', contact='', phone='', province='', city='', region='', details=''):
            self.parent = parent
            self.code = code
            self.name = name
            self.email = email
            self.contact = contact
            self.phone = phone
            self.province = province
            self.city = city
            self.region = region
            self.details = details

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.parent)
            _h = 5 * _h + Ice.getHash(self.code)
            _h = 5 * _h + Ice.getHash(self.name)
            _h = 5 * _h + Ice.getHash(self.email)
            _h = 5 * _h + Ice.getHash(self.contact)
            _h = 5 * _h + Ice.getHash(self.phone)
            _h = 5 * _h + Ice.getHash(self.province)
            _h = 5 * _h + Ice.getHash(self.city)
            _h = 5 * _h + Ice.getHash(self.region)
            _h = 5 * _h + Ice.getHash(self.details)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.platform.user.generated.AddOrganizationInput):
                return NotImplemented
            else:
                if self.parent is None or other.parent is None:
                    if self.parent != other.parent:
                        return (-1 if self.parent is None else 1)
                else:
                    if self.parent < other.parent:
                        return -1
                    elif self.parent > other.parent:
                        return 1
                if self.code is None or other.code is None:
                    if self.code != other.code:
                        return (-1 if self.code is None else 1)
                else:
                    if self.code < other.code:
                        return -1
                    elif self.code > other.code:
                        return 1
                if self.name is None or other.name is None:
                    if self.name != other.name:
                        return (-1 if self.name is None else 1)
                else:
                    if self.name < other.name:
                        return -1
                    elif self.name > other.name:
                        return 1
                if self.email is None or other.email is None:
                    if self.email != other.email:
                        return (-1 if self.email is None else 1)
                else:
                    if self.email < other.email:
                        return -1
                    elif self.email > other.email:
                        return 1
                if self.contact is None or other.contact is None:
                    if self.contact != other.contact:
                        return (-1 if self.contact is None else 1)
                else:
                    if self.contact < other.contact:
                        return -1
                    elif self.contact > other.contact:
                        return 1
                if self.phone is None or other.phone is None:
                    if self.phone != other.phone:
                        return (-1 if self.phone is None else 1)
                else:
                    if self.phone < other.phone:
                        return -1
                    elif self.phone > other.phone:
                        return 1
                if self.province is None or other.province is None:
                    if self.province != other.province:
                        return (-1 if self.province is None else 1)
                else:
                    if self.province < other.province:
                        return -1
                    elif self.province > other.province:
                        return 1
                if self.city is None or other.city is None:
                    if self.city != other.city:
                        return (-1 if self.city is None else 1)
                else:
                    if self.city < other.city:
                        return -1
                    elif self.city > other.city:
                        return 1
                if self.region is None or other.region is None:
                    if self.region != other.region:
                        return (-1 if self.region is None else 1)
                else:
                    if self.region < other.region:
                        return -1
                    elif self.region > other.region:
                        return 1
                if self.details is None or other.details is None:
                    if self.details != other.details:
                        return (-1 if self.details is None else 1)
                else:
                    if self.details < other.details:
                        return -1
                    elif self.details > other.details:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.platform.user.generated._t_AddOrganizationInput)

        __repr__ = __str__

    _M_com.jimi.platform.user.generated._t_AddOrganizationInput = IcePy.defineStruct('::com::jimi::platform::user::generated::AddOrganizationInput', AddOrganizationInput, (), (
        ('parent', (), IcePy._t_long),
        ('code', (), IcePy._t_string),
        ('name', (), IcePy._t_string),
        ('email', (), IcePy._t_string),
        ('contact', (), IcePy._t_string),
        ('phone', (), IcePy._t_string),
        ('province', (), IcePy._t_string),
        ('city', (), IcePy._t_string),
        ('region', (), IcePy._t_string),
        ('details', (), IcePy._t_string)
    ))

    _M_com.jimi.platform.user.generated.AddOrganizationInput = AddOrganizationInput
    del AddOrganizationInput

if 'AddRoleInput' not in _M_com.jimi.platform.user.generated.__dict__:
    _M_com.jimi.platform.user.generated.AddRoleInput = Ice.createTempClass()
    class AddRoleInput(object):
        """
        添加角色输入
        @date 2019年8月21日 上午11:28:15
        @author yaojianping
        @version 1.0
        Members:
        oid -- 机构id
        name -- 角色名称
        memo -- 备注
        """
        def __init__(self, oid=0, name='', memo=''):
            self.oid = oid
            self.name = name
            self.memo = memo

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.oid)
            _h = 5 * _h + Ice.getHash(self.name)
            _h = 5 * _h + Ice.getHash(self.memo)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.platform.user.generated.AddRoleInput):
                return NotImplemented
            else:
                if self.oid is None or other.oid is None:
                    if self.oid != other.oid:
                        return (-1 if self.oid is None else 1)
                else:
                    if self.oid < other.oid:
                        return -1
                    elif self.oid > other.oid:
                        return 1
                if self.name is None or other.name is None:
                    if self.name != other.name:
                        return (-1 if self.name is None else 1)
                else:
                    if self.name < other.name:
                        return -1
                    elif self.name > other.name:
                        return 1
                if self.memo is None or other.memo is None:
                    if self.memo != other.memo:
                        return (-1 if self.memo is None else 1)
                else:
                    if self.memo < other.memo:
                        return -1
                    elif self.memo > other.memo:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.platform.user.generated._t_AddRoleInput)

        __repr__ = __str__

    _M_com.jimi.platform.user.generated._t_AddRoleInput = IcePy.defineStruct('::com::jimi::platform::user::generated::AddRoleInput', AddRoleInput, (), (
        ('oid', (), IcePy._t_long),
        ('name', (), IcePy._t_string),
        ('memo', (), IcePy._t_string)
    ))

    _M_com.jimi.platform.user.generated.AddRoleInput = AddRoleInput
    del AddRoleInput

if 'CurrentAccount' not in _M_com.jimi.platform.user.generated.__dict__:
    _M_com.jimi.platform.user.generated.CurrentAccount = Ice.createTempClass()
    class CurrentAccount(object):
        """
        当前会话账号信息
        @date 2019年8月22日 下午2:05:28
        @author yaojianping
        @version 1.0
        Members:
        uid -- 账号id
        oid -- 机构id
        code -- 平台code
        """
        def __init__(self, uid=0, oid=0, code=0):
            self.uid = uid
            self.oid = oid
            self.code = code

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.uid)
            _h = 5 * _h + Ice.getHash(self.oid)
            _h = 5 * _h + Ice.getHash(self.code)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.platform.user.generated.CurrentAccount):
                return NotImplemented
            else:
                if self.uid is None or other.uid is None:
                    if self.uid != other.uid:
                        return (-1 if self.uid is None else 1)
                else:
                    if self.uid < other.uid:
                        return -1
                    elif self.uid > other.uid:
                        return 1
                if self.oid is None or other.oid is None:
                    if self.oid != other.oid:
                        return (-1 if self.oid is None else 1)
                else:
                    if self.oid < other.oid:
                        return -1
                    elif self.oid > other.oid:
                        return 1
                if self.code is None or other.code is None:
                    if self.code != other.code:
                        return (-1 if self.code is None else 1)
                else:
                    if self.code < other.code:
                        return -1
                    elif self.code > other.code:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.platform.user.generated._t_CurrentAccount)

        __repr__ = __str__

    _M_com.jimi.platform.user.generated._t_CurrentAccount = IcePy.defineStruct('::com::jimi::platform::user::generated::CurrentAccount', CurrentAccount, (), (
        ('uid', (), IcePy._t_long),
        ('oid', (), IcePy._t_long),
        ('code', (), IcePy._t_long)
    ))

    _M_com.jimi.platform.user.generated.CurrentAccount = CurrentAccount
    del CurrentAccount

if 'OrganizationOutput' not in _M_com.jimi.platform.user.generated.__dict__:
    _M_com.jimi.platform.user.generated.OrganizationOutput = Ice.createTempClass()
    class OrganizationOutput(object):
        """
        机构基本信息
        @date 2019年8月21日 上午11:27:16
        @author yaojianping
        @version 1.0
        Members:
        oid -- 机构Id
        name -- 机构/公司名称
        type -- 机构类型
        parent -- 父id
        hasChild -- 是否有下级
        """
        def __init__(self, oid=0, name='', type='', parent=0, hasChild=False):
            self.oid = oid
            self.name = name
            self.type = type
            self.parent = parent
            self.hasChild = hasChild

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.oid)
            _h = 5 * _h + Ice.getHash(self.name)
            _h = 5 * _h + Ice.getHash(self.type)
            _h = 5 * _h + Ice.getHash(self.parent)
            _h = 5 * _h + Ice.getHash(self.hasChild)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.platform.user.generated.OrganizationOutput):
                return NotImplemented
            else:
                if self.oid is None or other.oid is None:
                    if self.oid != other.oid:
                        return (-1 if self.oid is None else 1)
                else:
                    if self.oid < other.oid:
                        return -1
                    elif self.oid > other.oid:
                        return 1
                if self.name is None or other.name is None:
                    if self.name != other.name:
                        return (-1 if self.name is None else 1)
                else:
                    if self.name < other.name:
                        return -1
                    elif self.name > other.name:
                        return 1
                if self.type is None or other.type is None:
                    if self.type != other.type:
                        return (-1 if self.type is None else 1)
                else:
                    if self.type < other.type:
                        return -1
                    elif self.type > other.type:
                        return 1
                if self.parent is None or other.parent is None:
                    if self.parent != other.parent:
                        return (-1 if self.parent is None else 1)
                else:
                    if self.parent < other.parent:
                        return -1
                    elif self.parent > other.parent:
                        return 1
                if self.hasChild is None or other.hasChild is None:
                    if self.hasChild != other.hasChild:
                        return (-1 if self.hasChild is None else 1)
                else:
                    if self.hasChild < other.hasChild:
                        return -1
                    elif self.hasChild > other.hasChild:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.platform.user.generated._t_OrganizationOutput)

        __repr__ = __str__

    _M_com.jimi.platform.user.generated._t_OrganizationOutput = IcePy.defineStruct('::com::jimi::platform::user::generated::OrganizationOutput', OrganizationOutput, (), (
        ('oid', (), IcePy._t_long),
        ('name', (), IcePy._t_string),
        ('type', (), IcePy._t_string),
        ('parent', (), IcePy._t_long),
        ('hasChild', (), IcePy._t_bool)
    ))

    _M_com.jimi.platform.user.generated.OrganizationOutput = OrganizationOutput
    del OrganizationOutput

if 'OrganizationTypeOutput' not in _M_com.jimi.platform.user.generated.__dict__:
    _M_com.jimi.platform.user.generated.OrganizationTypeOutput = Ice.createTempClass()
    class OrganizationTypeOutput(object):
        """
        机构类型
        @date 2019年8月21日 上午11:27:16
        @author yaojianping
        @version 1.0
        Members:
        code -- 机构类型code
        name -- 机构类名称
        """
        def __init__(self, code='', name=''):
            self.code = code
            self.name = name

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.code)
            _h = 5 * _h + Ice.getHash(self.name)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.platform.user.generated.OrganizationTypeOutput):
                return NotImplemented
            else:
                if self.code is None or other.code is None:
                    if self.code != other.code:
                        return (-1 if self.code is None else 1)
                else:
                    if self.code < other.code:
                        return -1
                    elif self.code > other.code:
                        return 1
                if self.name is None or other.name is None:
                    if self.name != other.name:
                        return (-1 if self.name is None else 1)
                else:
                    if self.name < other.name:
                        return -1
                    elif self.name > other.name:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.platform.user.generated._t_OrganizationTypeOutput)

        __repr__ = __str__

    _M_com.jimi.platform.user.generated._t_OrganizationTypeOutput = IcePy.defineStruct('::com::jimi::platform::user::generated::OrganizationTypeOutput', OrganizationTypeOutput, (), (
        ('code', (), IcePy._t_string),
        ('name', (), IcePy._t_string)
    ))

    _M_com.jimi.platform.user.generated.OrganizationTypeOutput = OrganizationTypeOutput
    del OrganizationTypeOutput

if 'RoleOutput' not in _M_com.jimi.platform.user.generated.__dict__:
    _M_com.jimi.platform.user.generated.RoleOutput = Ice.createTempClass()
    class RoleOutput(object):
        """
        角色基本信息
        @date 2019年8月21日 下午2:30:34
        @author yaojianping
        @version 1.0
        Members:
        id -- 角色id
        name -- 角色名称
        """
        def __init__(self, id='', name=''):
            self.id = id
            self.name = name

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.id)
            _h = 5 * _h + Ice.getHash(self.name)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.platform.user.generated.RoleOutput):
                return NotImplemented
            else:
                if self.id is None or other.id is None:
                    if self.id != other.id:
                        return (-1 if self.id is None else 1)
                else:
                    if self.id < other.id:
                        return -1
                    elif self.id > other.id:
                        return 1
                if self.name is None or other.name is None:
                    if self.name != other.name:
                        return (-1 if self.name is None else 1)
                else:
                    if self.name < other.name:
                        return -1
                    elif self.name > other.name:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.platform.user.generated._t_RoleOutput)

        __repr__ = __str__

    _M_com.jimi.platform.user.generated._t_RoleOutput = IcePy.defineStruct('::com::jimi::platform::user::generated::RoleOutput', RoleOutput, (), (
        ('id', (), IcePy._t_string),
        ('name', (), IcePy._t_string)
    ))

    _M_com.jimi.platform.user.generated.RoleOutput = RoleOutput
    del RoleOutput

# End of module com.jimi.platform.user.generated

__name__ = 'com.jimi.platform.user'

# End of module com.jimi.platform.user

__name__ = 'com.jimi.platform'

# End of module com.jimi.platform

__name__ = 'com.jimi'

# End of module com.jimi

__name__ = 'com'

# End of module com
