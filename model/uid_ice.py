# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.2
#
# <auto-generated>
#
# Generated from file `uid.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
import ._common_ice

# Included module com
_M_com = Ice.openModule('com')

# Included module com.jimi
_M_com.jimi = Ice.openModule('com.jimi')

# Included module com.jimi.api
_M_com.jimi.api = Ice.openModule('com.jimi.api')

# Start of module com
__name__ = 'com'

# Start of module com.jimi
__name__ = 'com.jimi'

# Start of module com.jimi.api
__name__ = 'com.jimi.api'

# Start of module com.jimi.api.uid
_M_com.jimi.api.uid = Ice.openModule('com.jimi.api.uid')
__name__ = 'com.jimi.api.uid'

_M_com.jimi.api.uid._t_IdApi = IcePy.defineValue('::com::jimi::api::uid::IdApi', Ice.Value, -1, (), False, True, None, ())

if 'IdApiPrx' not in _M_com.jimi.api.uid.__dict__:
    _M_com.jimi.api.uid.IdApiPrx = Ice.createTempClass()
    class IdApiPrx(Ice.ObjectPrx):

        """
        获取64位长整型的ID
        @date 2019-08-22 15:56
        @author zhangduanfeng
        @since 1.0.0
        Arguments:
        context -- The request context for the invocation.
        Returns: long
        """
        def getId(self, context=None):
            return _M_com.jimi.api.uid.IdApi._op_getId.invoke(self, ((), context))

        """
        获取64位长整型的ID
        @date 2019-08-22 15:56
        @author zhangduanfeng
        @since 1.0.0
        Arguments:
        context -- The request context for the invocation.
        Returns: A future object for the invocation.
        """
        def getIdAsync(self, context=None):
            return _M_com.jimi.api.uid.IdApi._op_getId.invokeAsync(self, ((), context))

        """
        获取64位长整型的ID
        @date 2019-08-22 15:56
        @author zhangduanfeng
        @since 1.0.0
        Arguments:
        _response -- The asynchronous response callback.
        _ex -- The asynchronous exception callback.
        _sent -- The asynchronous sent callback.
        context -- The request context for the invocation.
        Returns: An asynchronous result object for the invocation.
        """
        def begin_getId(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_com.jimi.api.uid.IdApi._op_getId.begin(self, ((), _response, _ex, _sent, context))

        """
        获取64位长整型的ID
        @date 2019-08-22 15:56
        @author zhangduanfeng
        @since 1.0.0
        Arguments:
        Returns: long
        """
        def end_getId(self, _r):
            return _M_com.jimi.api.uid.IdApi._op_getId.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_com.jimi.api.uid.IdApiPrx.ice_checkedCast(proxy, '::com::jimi::api::uid::IdApi', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_com.jimi.api.uid.IdApiPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::uid::IdApi'
    _M_com.jimi.api.uid._t_IdApiPrx = IcePy.defineProxy('::com::jimi::api::uid::IdApi', IdApiPrx)

    _M_com.jimi.api.uid.IdApiPrx = IdApiPrx
    del IdApiPrx

    _M_com.jimi.api.uid.IdApi = Ice.createTempClass()
    class IdApi(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::com::jimi::api::uid::IdApi')

        def ice_id(self, current=None):
            return '::com::jimi::api::uid::IdApi'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::uid::IdApi'

        def getId(self, current=None):
            """
            获取64位长整型的ID
            @date 2019-08-22 15:56
            @author zhangduanfeng
            @since 1.0.0
            Arguments:
            current -- The Current object for the invocation.
            Returns: A future object for the invocation.
            """
            raise NotImplementedError("servant method 'getId' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.uid._t_IdApiDisp)

        __repr__ = __str__

    _M_com.jimi.api.uid._t_IdApiDisp = IcePy.defineClass('::com::jimi::api::uid::IdApi', IdApi, (), None, ())
    IdApi._ice_type = _M_com.jimi.api.uid._t_IdApiDisp

    IdApi._op_getId = IcePy.Operation('getId', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_long, False, 0), (_M_com.jimi.api._t_ApiException,))

    _M_com.jimi.api.uid.IdApi = IdApi
    del IdApi

# End of module com.jimi.api.uid

__name__ = 'com.jimi.api'

# End of module com.jimi.api

__name__ = 'com.jimi'

# End of module com.jimi

__name__ = 'com'

# End of module com
