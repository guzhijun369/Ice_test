# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.2
#
# <auto-generated>
#
# Generated from file `platform_dto.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
from model import common_ice

# Included module com
_M_com = Ice.openModule('com')

# Included module com.jimi
_M_com.jimi = Ice.openModule('com.jimi')

# Included module com.jimi.api
_M_com.jimi.api = Ice.openModule('com.jimi.api')

# Start of module com
__name__ = 'com'

# Start of module com.jimi
__name__ = 'com.jimi'

# Start of module com.jimi.api
__name__ = 'com.jimi.api'

# Start of module com.jimi.api.user
_M_com.jimi.api.user = Ice.openModule('com.jimi.api.user')
__name__ = 'com.jimi.api.user'

# Start of module com.jimi.api.user.system
_M_com.jimi.api.user.system = Ice.openModule('com.jimi.api.user.system')
__name__ = 'com.jimi.api.user.system'

# Start of module com.jimi.api.user.system.dto
_M_com.jimi.api.user.system.dto = Ice.openModule('com.jimi.api.user.system.dto')
__name__ = 'com.jimi.api.user.system.dto'

if 'ClientDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.ClientDTO = Ice.createTempClass()
    class ClientDTO(Ice.Value):
        """
        平台和应用 Key 和 Secret
        @date 2019年8月23日 上午10:05:28
        @author lcy
        @version 1.0
        Members:
        clientId -- Client ID
        clientSecret -- Client Secret
        """
        def __init__(self, clientId='', clientSecret=''):
            self.clientId = clientId
            self.clientSecret = clientSecret

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::ClientDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::ClientDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_ClientDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_ClientDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::ClientDTO', ClientDTO, -1, (), False, False, None, (
        ('clientId', (), IcePy._t_string, False, 0),
        ('clientSecret', (), IcePy._t_string, False, 0)
    ))
    ClientDTO._ice_type = _M_com.jimi.api.user.system.dto._t_ClientDTO

    _M_com.jimi.api.user.system.dto.ClientDTO = ClientDTO
    del ClientDTO

if 'PlatformAppInputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.PlatformAppInputDTO = Ice.createTempClass()
    class PlatformAppInputDTO(_M_com.jimi.api.BaseInputDTO):
        """
        创建平台APP输入参数
        @date 2019年8月23日 上午10:05:28
        @author lcy
        @version 1.0
        Members:
        appId -- 应用ID
        icon -- 图标
        name -- 应用名称
        type -- 平台类型
        code -- 平台code
        domain -- 域名
        contact -- 联系人
        production -- 是否是生产环境
        smsId -- 短信ID
        push -- 平台APP配置推送信息
        """
        def __init__(self, operator=0, platform='', appId='', icon='', name='', type=0, code='', domain='', contact='', production=False, smsId='', push=None):
            _M_com.jimi.api.BaseInputDTO.__init__(self, operator, platform)
            self.appId = appId
            self.icon = icon
            self.name = name
            self.type = type
            self.code = code
            self.domain = domain
            self.contact = contact
            self.production = production
            self.smsId = smsId
            self.push = push

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::PlatformAppInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::PlatformAppInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_PlatformAppInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_PlatformAppInputDTO = IcePy.declareValue('::com::jimi::api::user::system::dto::PlatformAppInputDTO')

    _M_com.jimi.api.user.system.dto._t_PlatformAppInputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::PlatformAppInputDTO', PlatformAppInputDTO, -1, (), False, False, _M_com.jimi.api._t_BaseInputDTO, (
        ('appId', (), IcePy._t_string, False, 0),
        ('icon', (), IcePy._t_string, False, 0),
        ('name', (), IcePy._t_string, False, 0),
        ('type', (), IcePy._t_int, False, 0),
        ('code', (), IcePy._t_string, False, 0),
        ('domain', (), IcePy._t_string, False, 0),
        ('contact', (), IcePy._t_string, False, 0),
        ('production', (), IcePy._t_bool, False, 0),
        ('smsId', (), IcePy._t_string, False, 0),
        ('push', (), _M_com.jimi.api.user.system.dto._t_ClientDTO, False, 0)
    ))
    PlatformAppInputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_PlatformAppInputDTO

    _M_com.jimi.api.user.system.dto.PlatformAppInputDTO = PlatformAppInputDTO
    del PlatformAppInputDTO

if 'PlatformInputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.PlatformInputDTO = Ice.createTempClass()
    class PlatformInputDTO(_M_com.jimi.api.BaseInputDTO):
        """
        创建平台输入数据
        @date 2019年8月23日 上午10:05:28
        @author lcy
        @version 1.0
        Members:
        code -- 平台编号
        name -- 平台名称
        address -- 平台地址
        desc -- 平台描述
        """
        def __init__(self, operator=0, platform='', code='', name='', address='', desc=''):
            _M_com.jimi.api.BaseInputDTO.__init__(self, operator, platform)
            self.code = code
            self.name = name
            self.address = address
            self.desc = desc

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::PlatformInputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::PlatformInputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_PlatformInputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_PlatformInputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::PlatformInputDTO', PlatformInputDTO, -1, (), False, False, _M_com.jimi.api._t_BaseInputDTO, (
        ('code', (), IcePy._t_string, False, 0),
        ('name', (), IcePy._t_string, False, 0),
        ('address', (), IcePy._t_string, False, 0),
        ('desc', (), IcePy._t_string, False, 0)
    ))
    PlatformInputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_PlatformInputDTO

    _M_com.jimi.api.user.system.dto.PlatformInputDTO = PlatformInputDTO
    del PlatformInputDTO

if 'PlatformAppOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.PlatformAppOutputDTO = Ice.createTempClass()
    class PlatformAppOutputDTO(Ice.Value):
        """
        平台APP创建输出数据
        @date 2019年8月23日 上午10:05:28
        @author lcy
        @version 1.0
        Members:
        appId -- 应用ID
        icon -- 图标
        name -- 应用名称
        type -- 平台类型
        code -- 平台code
        domain -- 域名
        contact -- 联系人
        production -- 是否是生产环境
        smsId -- 短信ID
        push -- 平台APP配置推送信息
        client -- 平台Client信息
        """
        def __init__(self, appId='', icon='', name='', type=0, code='', domain='', contact='', production=False, smsId='', push=None, client=None):
            self.appId = appId
            self.icon = icon
            self.name = name
            self.type = type
            self.code = code
            self.domain = domain
            self.contact = contact
            self.production = production
            self.smsId = smsId
            self.push = push
            self.client = client

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::PlatformAppOutputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::PlatformAppOutputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_PlatformAppOutputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_PlatformAppOutputDTO = IcePy.declareValue('::com::jimi::api::user::system::dto::PlatformAppOutputDTO')

    _M_com.jimi.api.user.system.dto._t_PlatformAppOutputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::PlatformAppOutputDTO', PlatformAppOutputDTO, -1, (), False, False, None, (
        ('appId', (), IcePy._t_string, False, 0),
        ('icon', (), IcePy._t_string, False, 0),
        ('name', (), IcePy._t_string, False, 0),
        ('type', (), IcePy._t_int, False, 0),
        ('code', (), IcePy._t_string, False, 0),
        ('domain', (), IcePy._t_string, False, 0),
        ('contact', (), IcePy._t_string, False, 0),
        ('production', (), IcePy._t_bool, False, 0),
        ('smsId', (), IcePy._t_string, False, 0),
        ('push', (), _M_com.jimi.api.user.system.dto._t_ClientDTO, False, 0),
        ('client', (), _M_com.jimi.api.user.system.dto._t_ClientDTO, False, 0)
    ))
    PlatformAppOutputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_PlatformAppOutputDTO

    _M_com.jimi.api.user.system.dto.PlatformAppOutputDTO = PlatformAppOutputDTO
    del PlatformAppOutputDTO

if 'PlatformOutputDTO' not in _M_com.jimi.api.user.system.dto.__dict__:
    _M_com.jimi.api.user.system.dto.PlatformOutputDTO = Ice.createTempClass()
    class PlatformOutputDTO(Ice.Value):
        """
        平台创建输出数据
        @date 2019年8月23日 上午10:05:28
        @author lcy
        @version 1.0
        Members:
        code -- 平台编号
        name -- 平台名称
        address -- 平台地址
        desc -- 平台描述
        client -- 平台登录接口权限校验
        """
        def __init__(self, code='', name='', address='', desc='', client=None):
            self.code = code
            self.name = name
            self.address = address
            self.desc = desc
            self.client = client

        def ice_id(self):
            return '::com::jimi::api::user::system::dto::PlatformOutputDTO'

        @staticmethod
        def ice_staticId():
            return '::com::jimi::api::user::system::dto::PlatformOutputDTO'

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.api.user.system.dto._t_PlatformOutputDTO)

        __repr__ = __str__

    _M_com.jimi.api.user.system.dto._t_PlatformOutputDTO = IcePy.declareValue('::com::jimi::api::user::system::dto::PlatformOutputDTO')

    _M_com.jimi.api.user.system.dto._t_PlatformOutputDTO = IcePy.defineValue('::com::jimi::api::user::system::dto::PlatformOutputDTO', PlatformOutputDTO, -1, (), False, False, None, (
        ('code', (), IcePy._t_string, False, 0),
        ('name', (), IcePy._t_string, False, 0),
        ('address', (), IcePy._t_string, False, 0),
        ('desc', (), IcePy._t_string, False, 0),
        ('client', (), _M_com.jimi.api.user.system.dto._t_ClientDTO, False, 0)
    ))
    PlatformOutputDTO._ice_type = _M_com.jimi.api.user.system.dto._t_PlatformOutputDTO

    _M_com.jimi.api.user.system.dto.PlatformOutputDTO = PlatformOutputDTO
    del PlatformOutputDTO

# End of module com.jimi.api.user.system.dto

__name__ = 'com.jimi.api.user.system'

# End of module com.jimi.api.user.system

__name__ = 'com.jimi.api.user'

# End of module com.jimi.api.user

__name__ = 'com.jimi.api'

# End of module com.jimi.api

__name__ = 'com.jimi'

# End of module com.jimi

__name__ = 'com'

# End of module com
