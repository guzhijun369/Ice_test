# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.2
#
# <auto-generated>
#
# Generated from file `platform_header.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module com
_M_com = Ice.openModule('com')
__name__ = 'com'

# Start of module com.jimi
_M_com.jimi = Ice.openModule('com.jimi')
__name__ = 'com.jimi'

# Start of module com.jimi.user
_M_com.jimi.user = Ice.openModule('com.jimi.user')
__name__ = 'com.jimi.user'

# Start of module com.jimi.user.api
_M_com.jimi.user.api = Ice.openModule('com.jimi.user.api')
__name__ = 'com.jimi.user.api'

# Start of module com.jimi.user.api.system
_M_com.jimi.user.api.system = Ice.openModule('com.jimi.user.api.system')
__name__ = 'com.jimi.user.api.system'

# Start of module com.jimi.user.api.system.dto
_M_com.jimi.user.api.system.dto = Ice.openModule('com.jimi.user.api.system.dto')
__name__ = 'com.jimi.user.api.system.dto'

if 'CurrentAccount' not in _M_com.jimi.user.api.system.dto.__dict__:
    _M_com.jimi.user.api.system.dto.CurrentAccount = Ice.createTempClass()
    class CurrentAccount(object):
        """
        当前会话账号信息
        @date 2019年8月23日 上午10:05:28
        @author lcy
        @version 1.0
        Members:
        uid -- 账号id
        oid -- 机构id
        code -- 平台code
        """
        def __init__(self, uid=0, oid=0, code=0):
            self.uid = uid
            self.oid = oid
            self.code = code

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.uid)
            _h = 5 * _h + Ice.getHash(self.oid)
            _h = 5 * _h + Ice.getHash(self.code)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.user.api.system.dto.CurrentAccount):
                return NotImplemented
            else:
                if self.uid is None or other.uid is None:
                    if self.uid != other.uid:
                        return (-1 if self.uid is None else 1)
                else:
                    if self.uid < other.uid:
                        return -1
                    elif self.uid > other.uid:
                        return 1
                if self.oid is None or other.oid is None:
                    if self.oid != other.oid:
                        return (-1 if self.oid is None else 1)
                else:
                    if self.oid < other.oid:
                        return -1
                    elif self.oid > other.oid:
                        return 1
                if self.code is None or other.code is None:
                    if self.code != other.code:
                        return (-1 if self.code is None else 1)
                else:
                    if self.code < other.code:
                        return -1
                    elif self.code > other.code:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.user.api.system.dto._t_CurrentAccount)

        __repr__ = __str__

    _M_com.jimi.user.api.system.dto._t_CurrentAccount = IcePy.defineStruct('::com::jimi::user::api::system::dto::CurrentAccount', CurrentAccount, (), (
        ('uid', (), IcePy._t_long),
        ('oid', (), IcePy._t_long),
        ('code', (), IcePy._t_long)
    ))

    _M_com.jimi.user.api.system.dto.CurrentAccount = CurrentAccount
    del CurrentAccount

if 'PushClient' not in _M_com.jimi.user.api.system.dto.__dict__:
    _M_com.jimi.user.api.system.dto.PushClient = Ice.createTempClass()
    class PushClient(object):
        """
        应用极光推送 Key 和 Secret
        @date 2019年8月23日 上午10:05:28
        @author lcy
        @version 1.0
        Members:
        clientId -- Client ID
        clientSecret -- Client Secret
        """
        def __init__(self, clientId='', clientSecret=''):
            self.clientId = clientId
            self.clientSecret = clientSecret

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.clientId)
            _h = 5 * _h + Ice.getHash(self.clientSecret)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.user.api.system.dto.PushClient):
                return NotImplemented
            else:
                if self.clientId is None or other.clientId is None:
                    if self.clientId != other.clientId:
                        return (-1 if self.clientId is None else 1)
                else:
                    if self.clientId < other.clientId:
                        return -1
                    elif self.clientId > other.clientId:
                        return 1
                if self.clientSecret is None or other.clientSecret is None:
                    if self.clientSecret != other.clientSecret:
                        return (-1 if self.clientSecret is None else 1)
                else:
                    if self.clientSecret < other.clientSecret:
                        return -1
                    elif self.clientSecret > other.clientSecret:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.user.api.system.dto._t_PushClient)

        __repr__ = __str__

    _M_com.jimi.user.api.system.dto._t_PushClient = IcePy.defineStruct('::com::jimi::user::api::system::dto::PushClient', PushClient, (), (
        ('clientId', (), IcePy._t_string),
        ('clientSecret', (), IcePy._t_string)
    ))

    _M_com.jimi.user.api.system.dto.PushClient = PushClient
    del PushClient

if 'Client' not in _M_com.jimi.user.api.system.dto.__dict__:
    _M_com.jimi.user.api.system.dto.Client = Ice.createTempClass()
    class Client(object):
        """
        平台和应用 Key 和 Secret
        @date 2019年8月23日 上午10:05:28
        @author lcy
        @version 1.0
        Members:
        clientId -- Client ID
        clientSecret -- Client Secret
        """
        def __init__(self, clientId='', clientSecret=''):
            self.clientId = clientId
            self.clientSecret = clientSecret

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.clientId)
            _h = 5 * _h + Ice.getHash(self.clientSecret)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.user.api.system.dto.Client):
                return NotImplemented
            else:
                if self.clientId is None or other.clientId is None:
                    if self.clientId != other.clientId:
                        return (-1 if self.clientId is None else 1)
                else:
                    if self.clientId < other.clientId:
                        return -1
                    elif self.clientId > other.clientId:
                        return 1
                if self.clientSecret is None or other.clientSecret is None:
                    if self.clientSecret != other.clientSecret:
                        return (-1 if self.clientSecret is None else 1)
                else:
                    if self.clientSecret < other.clientSecret:
                        return -1
                    elif self.clientSecret > other.clientSecret:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.user.api.system.dto._t_Client)

        __repr__ = __str__

    _M_com.jimi.user.api.system.dto._t_Client = IcePy.defineStruct('::com::jimi::user::api::system::dto::Client', Client, (), (
        ('clientId', (), IcePy._t_string),
        ('clientSecret', (), IcePy._t_string)
    ))

    _M_com.jimi.user.api.system.dto.Client = Client
    del Client

if 'PlatformAppInputDTO' not in _M_com.jimi.user.api.system.dto.__dict__:
    _M_com.jimi.user.api.system.dto.PlatformAppInputDTO = Ice.createTempClass()
    class PlatformAppInputDTO(object):
        """
        创建平台APP输入参数
        @date 2019年8月23日 上午10:05:28
        @author lcy
        @version 1.0
        Members:
        appId -- 应用ID
        icon -- 图标
        type -- 平台类型
        code -- 平台code
        domain -- 域名
        contact -- 联系人
        production -- 是否是生产环境
        smsId -- 短信ID
        push -- 平台APP配置推送信息
        """
        def __init__(self, appId='', icon='', type=0, code='', domain='', contact='', production=False, smsId='', push=Ice._struct_marker):
            self.appId = appId
            self.icon = icon
            self.type = type
            self.code = code
            self.domain = domain
            self.contact = contact
            self.production = production
            self.smsId = smsId
            if push is Ice._struct_marker:
                self.push = _M_com.jimi.user.api.system.dto.PushClient()
            else:
                self.push = push

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.appId)
            _h = 5 * _h + Ice.getHash(self.icon)
            _h = 5 * _h + Ice.getHash(self.type)
            _h = 5 * _h + Ice.getHash(self.code)
            _h = 5 * _h + Ice.getHash(self.domain)
            _h = 5 * _h + Ice.getHash(self.contact)
            _h = 5 * _h + Ice.getHash(self.production)
            _h = 5 * _h + Ice.getHash(self.smsId)
            _h = 5 * _h + Ice.getHash(self.push)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.user.api.system.dto.PlatformAppInputDTO):
                return NotImplemented
            else:
                if self.appId is None or other.appId is None:
                    if self.appId != other.appId:
                        return (-1 if self.appId is None else 1)
                else:
                    if self.appId < other.appId:
                        return -1
                    elif self.appId > other.appId:
                        return 1
                if self.icon is None or other.icon is None:
                    if self.icon != other.icon:
                        return (-1 if self.icon is None else 1)
                else:
                    if self.icon < other.icon:
                        return -1
                    elif self.icon > other.icon:
                        return 1
                if self.type is None or other.type is None:
                    if self.type != other.type:
                        return (-1 if self.type is None else 1)
                else:
                    if self.type < other.type:
                        return -1
                    elif self.type > other.type:
                        return 1
                if self.code is None or other.code is None:
                    if self.code != other.code:
                        return (-1 if self.code is None else 1)
                else:
                    if self.code < other.code:
                        return -1
                    elif self.code > other.code:
                        return 1
                if self.domain is None or other.domain is None:
                    if self.domain != other.domain:
                        return (-1 if self.domain is None else 1)
                else:
                    if self.domain < other.domain:
                        return -1
                    elif self.domain > other.domain:
                        return 1
                if self.contact is None or other.contact is None:
                    if self.contact != other.contact:
                        return (-1 if self.contact is None else 1)
                else:
                    if self.contact < other.contact:
                        return -1
                    elif self.contact > other.contact:
                        return 1
                if self.production is None or other.production is None:
                    if self.production != other.production:
                        return (-1 if self.production is None else 1)
                else:
                    if self.production < other.production:
                        return -1
                    elif self.production > other.production:
                        return 1
                if self.smsId is None or other.smsId is None:
                    if self.smsId != other.smsId:
                        return (-1 if self.smsId is None else 1)
                else:
                    if self.smsId < other.smsId:
                        return -1
                    elif self.smsId > other.smsId:
                        return 1
                if self.push is None or other.push is None:
                    if self.push != other.push:
                        return (-1 if self.push is None else 1)
                else:
                    if self.push < other.push:
                        return -1
                    elif self.push > other.push:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.user.api.system.dto._t_PlatformAppInputDTO)

        __repr__ = __str__

    _M_com.jimi.user.api.system.dto._t_PlatformAppInputDTO = IcePy.defineStruct('::com::jimi::user::api::system::dto::PlatformAppInputDTO', PlatformAppInputDTO, (), (
        ('appId', (), IcePy._t_string),
        ('icon', (), IcePy._t_string),
        ('type', (), IcePy._t_int),
        ('code', (), IcePy._t_string),
        ('domain', (), IcePy._t_string),
        ('contact', (), IcePy._t_string),
        ('production', (), IcePy._t_bool),
        ('smsId', (), IcePy._t_string),
        ('push', (), _M_com.jimi.user.api.system.dto._t_PushClient)
    ))

    _M_com.jimi.user.api.system.dto.PlatformAppInputDTO = PlatformAppInputDTO
    del PlatformAppInputDTO

if 'PlatformInputDTO' not in _M_com.jimi.user.api.system.dto.__dict__:
    _M_com.jimi.user.api.system.dto.PlatformInputDTO = Ice.createTempClass()
    class PlatformInputDTO(object):
        """
        创建平台输入数据
        @date 2019年8月23日 上午10:05:28
        @author lcy
        @version 1.0
        Members:
        code -- 平台编号
        name -- 平台名称
        address -- 平台地址
        desc -- 平台描述
        createUserId -- 平台创建用户ID
        updateUserId -- 平台更新用户ID
        """
        def __init__(self, code='', name='', address='', desc='', createUserId='', updateUserId=''):
            self.code = code
            self.name = name
            self.address = address
            self.desc = desc
            self.createUserId = createUserId
            self.updateUserId = updateUserId

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.code)
            _h = 5 * _h + Ice.getHash(self.name)
            _h = 5 * _h + Ice.getHash(self.address)
            _h = 5 * _h + Ice.getHash(self.desc)
            _h = 5 * _h + Ice.getHash(self.createUserId)
            _h = 5 * _h + Ice.getHash(self.updateUserId)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.user.api.system.dto.PlatformInputDTO):
                return NotImplemented
            else:
                if self.code is None or other.code is None:
                    if self.code != other.code:
                        return (-1 if self.code is None else 1)
                else:
                    if self.code < other.code:
                        return -1
                    elif self.code > other.code:
                        return 1
                if self.name is None or other.name is None:
                    if self.name != other.name:
                        return (-1 if self.name is None else 1)
                else:
                    if self.name < other.name:
                        return -1
                    elif self.name > other.name:
                        return 1
                if self.address is None or other.address is None:
                    if self.address != other.address:
                        return (-1 if self.address is None else 1)
                else:
                    if self.address < other.address:
                        return -1
                    elif self.address > other.address:
                        return 1
                if self.desc is None or other.desc is None:
                    if self.desc != other.desc:
                        return (-1 if self.desc is None else 1)
                else:
                    if self.desc < other.desc:
                        return -1
                    elif self.desc > other.desc:
                        return 1
                if self.createUserId is None or other.createUserId is None:
                    if self.createUserId != other.createUserId:
                        return (-1 if self.createUserId is None else 1)
                else:
                    if self.createUserId < other.createUserId:
                        return -1
                    elif self.createUserId > other.createUserId:
                        return 1
                if self.updateUserId is None or other.updateUserId is None:
                    if self.updateUserId != other.updateUserId:
                        return (-1 if self.updateUserId is None else 1)
                else:
                    if self.updateUserId < other.updateUserId:
                        return -1
                    elif self.updateUserId > other.updateUserId:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.user.api.system.dto._t_PlatformInputDTO)

        __repr__ = __str__

    _M_com.jimi.user.api.system.dto._t_PlatformInputDTO = IcePy.defineStruct('::com::jimi::user::api::system::dto::PlatformInputDTO', PlatformInputDTO, (), (
        ('code', (), IcePy._t_string),
        ('name', (), IcePy._t_string),
        ('address', (), IcePy._t_string),
        ('desc', (), IcePy._t_string),
        ('createUserId', (), IcePy._t_string),
        ('updateUserId', (), IcePy._t_string)
    ))

    _M_com.jimi.user.api.system.dto.PlatformInputDTO = PlatformInputDTO
    del PlatformInputDTO

if 'PlatformAppOutputDTO' not in _M_com.jimi.user.api.system.dto.__dict__:
    _M_com.jimi.user.api.system.dto.PlatformAppOutputDTO = Ice.createTempClass()
    class PlatformAppOutputDTO(object):
        """
        平台APP创建输出数据
        @date 2019年8月23日 上午10:05:28
        @author lcy
        @version 1.0
        Members:
        appId -- 应用ID
        icon -- 图标
        type -- 平台类型
        code -- 平台code
        domain -- 域名
        contact -- 联系人
        production -- 是否是生产环境
        smsId -- 短信ID
        push -- 平台APP配置推送信息
        client -- 平台Client信息
        """
        def __init__(self, appId='', icon='', type=0, code='', domain='', contact='', production=False, smsId='', push=Ice._struct_marker, client=Ice._struct_marker):
            self.appId = appId
            self.icon = icon
            self.type = type
            self.code = code
            self.domain = domain
            self.contact = contact
            self.production = production
            self.smsId = smsId
            if push is Ice._struct_marker:
                self.push = _M_com.jimi.user.api.system.dto.PushClient()
            else:
                self.push = push
            if client is Ice._struct_marker:
                self.client = _M_com.jimi.user.api.system.dto.Client()
            else:
                self.client = client

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.appId)
            _h = 5 * _h + Ice.getHash(self.icon)
            _h = 5 * _h + Ice.getHash(self.type)
            _h = 5 * _h + Ice.getHash(self.code)
            _h = 5 * _h + Ice.getHash(self.domain)
            _h = 5 * _h + Ice.getHash(self.contact)
            _h = 5 * _h + Ice.getHash(self.production)
            _h = 5 * _h + Ice.getHash(self.smsId)
            _h = 5 * _h + Ice.getHash(self.push)
            _h = 5 * _h + Ice.getHash(self.client)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.user.api.system.dto.PlatformAppOutputDTO):
                return NotImplemented
            else:
                if self.appId is None or other.appId is None:
                    if self.appId != other.appId:
                        return (-1 if self.appId is None else 1)
                else:
                    if self.appId < other.appId:
                        return -1
                    elif self.appId > other.appId:
                        return 1
                if self.icon is None or other.icon is None:
                    if self.icon != other.icon:
                        return (-1 if self.icon is None else 1)
                else:
                    if self.icon < other.icon:
                        return -1
                    elif self.icon > other.icon:
                        return 1
                if self.type is None or other.type is None:
                    if self.type != other.type:
                        return (-1 if self.type is None else 1)
                else:
                    if self.type < other.type:
                        return -1
                    elif self.type > other.type:
                        return 1
                if self.code is None or other.code is None:
                    if self.code != other.code:
                        return (-1 if self.code is None else 1)
                else:
                    if self.code < other.code:
                        return -1
                    elif self.code > other.code:
                        return 1
                if self.domain is None or other.domain is None:
                    if self.domain != other.domain:
                        return (-1 if self.domain is None else 1)
                else:
                    if self.domain < other.domain:
                        return -1
                    elif self.domain > other.domain:
                        return 1
                if self.contact is None or other.contact is None:
                    if self.contact != other.contact:
                        return (-1 if self.contact is None else 1)
                else:
                    if self.contact < other.contact:
                        return -1
                    elif self.contact > other.contact:
                        return 1
                if self.production is None or other.production is None:
                    if self.production != other.production:
                        return (-1 if self.production is None else 1)
                else:
                    if self.production < other.production:
                        return -1
                    elif self.production > other.production:
                        return 1
                if self.smsId is None or other.smsId is None:
                    if self.smsId != other.smsId:
                        return (-1 if self.smsId is None else 1)
                else:
                    if self.smsId < other.smsId:
                        return -1
                    elif self.smsId > other.smsId:
                        return 1
                if self.push is None or other.push is None:
                    if self.push != other.push:
                        return (-1 if self.push is None else 1)
                else:
                    if self.push < other.push:
                        return -1
                    elif self.push > other.push:
                        return 1
                if self.client is None or other.client is None:
                    if self.client != other.client:
                        return (-1 if self.client is None else 1)
                else:
                    if self.client < other.client:
                        return -1
                    elif self.client > other.client:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.user.api.system.dto._t_PlatformAppOutputDTO)

        __repr__ = __str__

    _M_com.jimi.user.api.system.dto._t_PlatformAppOutputDTO = IcePy.defineStruct('::com::jimi::user::api::system::dto::PlatformAppOutputDTO', PlatformAppOutputDTO, (), (
        ('appId', (), IcePy._t_string),
        ('icon', (), IcePy._t_string),
        ('type', (), IcePy._t_int),
        ('code', (), IcePy._t_string),
        ('domain', (), IcePy._t_string),
        ('contact', (), IcePy._t_string),
        ('production', (), IcePy._t_bool),
        ('smsId', (), IcePy._t_string),
        ('push', (), _M_com.jimi.user.api.system.dto._t_PushClient),
        ('client', (), _M_com.jimi.user.api.system.dto._t_Client)
    ))

    _M_com.jimi.user.api.system.dto.PlatformAppOutputDTO = PlatformAppOutputDTO
    del PlatformAppOutputDTO

if 'PlatformOutputDTO' not in _M_com.jimi.user.api.system.dto.__dict__:
    _M_com.jimi.user.api.system.dto.PlatformOutputDTO = Ice.createTempClass()
    class PlatformOutputDTO(object):
        """
        平台创建输出数据
        @date 2019年8月23日 上午10:05:28
        @author lcy
        @version 1.0
        Members:
        code -- 平台编号
        name -- 平台名称
        address -- 平台地址
        desc -- 平台描述
        createUserId -- 平台创建用户
        updateUserId -- 平台更新用户
        client -- 平台登录接口权限校验
        gmtCreate -- 平台创建时间
        gmtModified -- 平台更新时间
        """
        def __init__(self, code='', name='', address='', desc='', createUserId='', updateUserId='', client=Ice._struct_marker, gmtCreate=0, gmtModified=0):
            self.code = code
            self.name = name
            self.address = address
            self.desc = desc
            self.createUserId = createUserId
            self.updateUserId = updateUserId
            if client is Ice._struct_marker:
                self.client = _M_com.jimi.user.api.system.dto.Client()
            else:
                self.client = client
            self.gmtCreate = gmtCreate
            self.gmtModified = gmtModified

        def __hash__(self):
            _h = 0
            _h = 5 * _h + Ice.getHash(self.code)
            _h = 5 * _h + Ice.getHash(self.name)
            _h = 5 * _h + Ice.getHash(self.address)
            _h = 5 * _h + Ice.getHash(self.desc)
            _h = 5 * _h + Ice.getHash(self.createUserId)
            _h = 5 * _h + Ice.getHash(self.updateUserId)
            _h = 5 * _h + Ice.getHash(self.client)
            _h = 5 * _h + Ice.getHash(self.gmtCreate)
            _h = 5 * _h + Ice.getHash(self.gmtModified)
            return _h % 0x7fffffff

        def __compare(self, other):
            if other is None:
                return 1
            elif not isinstance(other, _M_com.jimi.user.api.system.dto.PlatformOutputDTO):
                return NotImplemented
            else:
                if self.code is None or other.code is None:
                    if self.code != other.code:
                        return (-1 if self.code is None else 1)
                else:
                    if self.code < other.code:
                        return -1
                    elif self.code > other.code:
                        return 1
                if self.name is None or other.name is None:
                    if self.name != other.name:
                        return (-1 if self.name is None else 1)
                else:
                    if self.name < other.name:
                        return -1
                    elif self.name > other.name:
                        return 1
                if self.address is None or other.address is None:
                    if self.address != other.address:
                        return (-1 if self.address is None else 1)
                else:
                    if self.address < other.address:
                        return -1
                    elif self.address > other.address:
                        return 1
                if self.desc is None or other.desc is None:
                    if self.desc != other.desc:
                        return (-1 if self.desc is None else 1)
                else:
                    if self.desc < other.desc:
                        return -1
                    elif self.desc > other.desc:
                        return 1
                if self.createUserId is None or other.createUserId is None:
                    if self.createUserId != other.createUserId:
                        return (-1 if self.createUserId is None else 1)
                else:
                    if self.createUserId < other.createUserId:
                        return -1
                    elif self.createUserId > other.createUserId:
                        return 1
                if self.updateUserId is None or other.updateUserId is None:
                    if self.updateUserId != other.updateUserId:
                        return (-1 if self.updateUserId is None else 1)
                else:
                    if self.updateUserId < other.updateUserId:
                        return -1
                    elif self.updateUserId > other.updateUserId:
                        return 1
                if self.client is None or other.client is None:
                    if self.client != other.client:
                        return (-1 if self.client is None else 1)
                else:
                    if self.client < other.client:
                        return -1
                    elif self.client > other.client:
                        return 1
                if self.gmtCreate is None or other.gmtCreate is None:
                    if self.gmtCreate != other.gmtCreate:
                        return (-1 if self.gmtCreate is None else 1)
                else:
                    if self.gmtCreate < other.gmtCreate:
                        return -1
                    elif self.gmtCreate > other.gmtCreate:
                        return 1
                if self.gmtModified is None or other.gmtModified is None:
                    if self.gmtModified != other.gmtModified:
                        return (-1 if self.gmtModified is None else 1)
                else:
                    if self.gmtModified < other.gmtModified:
                        return -1
                    elif self.gmtModified > other.gmtModified:
                        return 1
                return 0

        def __lt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r < 0

        def __le__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r <= 0

        def __gt__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r > 0

        def __ge__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r >= 0

        def __eq__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r == 0

        def __ne__(self, other):
            r = self.__compare(other)
            if r is NotImplemented:
                return r
            else:
                return r != 0

        def __str__(self):
            return IcePy.stringify(self, _M_com.jimi.user.api.system.dto._t_PlatformOutputDTO)

        __repr__ = __str__

    _M_com.jimi.user.api.system.dto._t_PlatformOutputDTO = IcePy.defineStruct('::com::jimi::user::api::system::dto::PlatformOutputDTO', PlatformOutputDTO, (), (
        ('code', (), IcePy._t_string),
        ('name', (), IcePy._t_string),
        ('address', (), IcePy._t_string),
        ('desc', (), IcePy._t_string),
        ('createUserId', (), IcePy._t_string),
        ('updateUserId', (), IcePy._t_string),
        ('client', (), _M_com.jimi.user.api.system.dto._t_Client),
        ('gmtCreate', (), IcePy._t_long),
        ('gmtModified', (), IcePy._t_long)
    ))

    _M_com.jimi.user.api.system.dto.PlatformOutputDTO = PlatformOutputDTO
    del PlatformOutputDTO

# End of module com.jimi.user.api.system.dto

__name__ = 'com.jimi.user.api.system'

# End of module com.jimi.user.api.system

__name__ = 'com.jimi.user.api'

# End of module com.jimi.user.api

__name__ = 'com.jimi.user'

# End of module com.jimi.user

__name__ = 'com.jimi'

# End of module com.jimi

__name__ = 'com'

# End of module com
